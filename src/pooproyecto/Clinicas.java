/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pooproyecto;

import javax.swing.DefaultListModel;

/**
 *
 * @author usuario
 */
public class Clinicas extends javax.swing.JFrame {

    /**
     * Creates new form Clinicas
     */
    public Clinicas() {
        initComponents();
        DefaultListModel model = new DefaultListModel();
        listaC.setModel(model);
        model.addElement("Boston Vet");
        model.addElement("Clínica veterinaria Mis mascotas");
        model.addElement("Unimed Veterinaria");
        model.addElement("Clínica veterinaria Don Perro");
        model.addElement("Dogtor Cat");
        model.addElement("Clínica veterinaria La 38");
        model.addElement("Clínica veterinaria El Country");
        model.addElement("Clínica veterinaria San Francisco");
        model.addElement("Agro-veterinaria El Proveedor");
        model.addElement("Clínica veterinaria K-ninos");
        model.addElement("Clínica veterinaria Kanopolis");
        model.addElement("Sharpey Clínica veterinaria");
        model.addElement("Maskot Veterinaria");
        model.addElement("MasterVet");
        model.addElement("La Tienda del Perro");
        model.addElement("Happy Pets Almacén veterinario");
        model.addElement("Vida Animal S.A.S");
        model.addElement("Fundación Animal Salud");
        model.addElement("Mi Corral");
        model.addElement("Centro Clínico veterinario La 45");
        model.addElement("Vital Pets Centro veterinario");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaC = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Clinicas:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Informacion:");

        listaC.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaCMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaC);

        info.setColumns(20);
        info.setRows(5);
        jScrollPane2.setViewportView(info);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(193, 193, 193))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaCMouseClicked
        DefaultListModel model = (DefaultListModel) listaC.getModel();
        int nd = listaC.getSelectedIndex();
        if (nd != -1) {
            String cli = model.get(nd).toString();
            if (cli.equals("Boston Vet")) {
                info.setText("Horario: 08:00 - 19:00 \nDirección: Calle 60 #43-78 ");
            }
            if (cli.equals("Clínica veterinaria Mis mascotas")) {
                info.setText("Horario: 24h \nDirección: Local 2 87-27 Olaya Herrera ");
            }
            if (cli.equals("Unimed Veterinaria")) {
                info.setText("Horario: 24h \nDirección: Cra 43 #80-168 ");
            }
            if (cli.equals("Clínica veterinaria Don Perro")) {
                info.setText("Horario: 24h \nDirección: Cra 43b #82-170 ");
            }
            if (cli.equals("Dogtor Cat")) {
                info.setText("Horario: 24h \nDirección: Cra 47 # 82-170");
            }
            if (cli.equals("Clínica veterinaria La 38")) {
                info.setText("Horario: 24h \nDirección: Cra 38 #74-232 ");
            }
            if (cli.equals("Clínica veterinaria El Country")) {
                info.setText("Horario: 24h \nDirección: Cra 60 #79-120 ");
            }
            if (cli.equals("Clínica veterinaria San Francisco")) {
                info.setText("Horario: 24h \nDirección: Cra 44 #79-115");
            }
            if (cli.equals("Agro-veterinaria El Proveedor")) {
                info.setText("Horario: 08:00 - 19:00 \nDirección: Calle 4 #27-21");
            }
            if (cli.equals("Clínica veterinaria K-ninos")) {
                info.setText("Horario: 07:00 - 18:00 \nDirección: Cra 38 #65-115 ");
            }
            if (cli.equals("Clínica veterinaria Kanopolis")) {
                info.setText("Horario: 08:00 - 19:00 \nDirección: Cra 75a #89-20");
            }
            if (cli.equals("Sharpey Clínica veterinaria")) {
                info.setText("Horario: 24h \nDirección: Cra 38 # 69-128");
            }
            if (cli.equals("Maskot Veterinaria")) {
                info.setText("Horario: 08:00 - 21:00 \nDirección: Cra 70 #88-17 ");
            }
            if (cli.equals("MasterVet")) {
                info.setText("Horario: -- \nDirección: Calle 86 #47-78");
            }
            if (cli.equals("La Tienda del Perro")) {
                info.setText("Horario: 07:30 - 19:30 \nDirección: Cra 60 #79-37");
            }
            if (cli.equals("Happy Pets Almacén veterinario")) {
                info.setText("Horario: 08:00 - 19:00 \nDirección: Cra 32, esquina Calle 72 #72-05");
            }
            if (cli.equals("Vida Animal S.A.S")) {
                info.setText("Horario: 24h \nDirección: Av Olaya Herrera #84-173 ");
            }
            if (cli.equals("Fundación Animal Salud")) {
                info.setText("Horario: 08:00 - 20:00 \nDirección: Cra 67 #76-94");
            }
            if (cli.equals("Mi Corral")) {
                info.setText("Horario: 09:00 - 20:00 \nDirección: Calle 84 #66-82 ");
            }
            if (cli.equals("Centro Clínico veterinario La 45")) {
                info.setText("Horario: 08:00 - 19:00 \nDirección: Calle 45 #17-70 ");
            }
            if (cli.equals("Vital Pets Centro veterinario")) {
                info.setText("Horario: 08:00 - 18:30 \nDirección: Calle 79b #42-516");
            }
        }
    }//GEN-LAST:event_listaCMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clinicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clinicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clinicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clinicas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clinicas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaC;
    // End of variables declaration//GEN-END:variables
}
